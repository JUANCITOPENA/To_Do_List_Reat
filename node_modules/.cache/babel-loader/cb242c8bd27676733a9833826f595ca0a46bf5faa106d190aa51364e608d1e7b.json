{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jma\\\\Desktop\\\\todo-list-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport TaskSummary from './components/TaskSummary';\nimport TaskModal from './components/TaskModal';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkTaskDeadlines();\n    }, 60000); // Verifica cada minuto\n\n    return () => clearInterval(interval);\n  }, [tasks]);\n  const checkTaskDeadlines = () => {\n    const now = new Date();\n    tasks.forEach(task => {\n      if (new Date(task.endDate) <= now && task.status !== 'completed') {\n        setSelectedTask(task);\n      }\n    });\n  };\n  const addTask = task => {\n    setTasks(prevTasks => [...prevTasks, task]);\n  };\n  const updateTask = updatedTask => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  const deleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n  };\n  const completeTask = id => {\n    updateTask({\n      ...tasks.find(task => task.id === id),\n      status: 'completed'\n    });\n    setSelectedTask(null);\n  };\n  const postponeTask = id => {\n    const newEndDate = new Date();\n    newEndDate.setDate(newEndDate.getDate() + 1);\n    updateTask({\n      ...tasks.find(task => task.id === id),\n      endDate: newEndDate.toISOString().split('T')[0]\n    });\n    setSelectedTask(null);\n  };\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskSummary, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: selectedTask,\n      completeTask: completeTask,\n      postponeTask: postponeTask,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Cvg8ZAXndLj8UIebRFAblQ+N89M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","TaskSummary","TaskModal","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","selectedTask","setSelectedTask","interval","setInterval","checkTaskDeadlines","clearInterval","now","Date","forEach","task","endDate","status","addTask","prevTasks","updateTask","updatedTask","map","id","deleteTask","filter","completeTask","find","postponeTask","newEndDate","setDate","getDate","toISOString","split","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["C:/Users/jma/Desktop/todo-list-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport TaskSummary from './components/TaskSummary';\nimport TaskModal from './components/TaskModal';\nimport './styles.css';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkTaskDeadlines();\n    }, 60000); // Verifica cada minuto\n\n    return () => clearInterval(interval);\n  }, [tasks]);\n\n  const checkTaskDeadlines = () => {\n    const now = new Date();\n    tasks.forEach(task => {\n      if (new Date(task.endDate) <= now && task.status !== 'completed') {\n        setSelectedTask(task);\n      }\n    });\n  };\n\n  const addTask = task => {\n    setTasks(prevTasks => [...prevTasks, task]);\n  };\n\n  const updateTask = updatedTask => {\n    setTasks(prevTasks =>\n      prevTasks.map(task => (task.id === updatedTask.id ? updatedTask : task))\n    );\n  };\n\n  const deleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n  };\n\n  const completeTask = id => {\n    updateTask({ ...tasks.find(task => task.id === id), status: 'completed' });\n    setSelectedTask(null);\n  };\n\n  const postponeTask = id => {\n    const newEndDate = new Date();\n    newEndDate.setDate(newEndDate.getDate() + 1);\n    updateTask({ ...tasks.find(task => task.id === id), endDate: newEndDate.toISOString().split('T')[0] });\n    setSelectedTask(null);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>To-Do List</h1>\n      <TaskForm addTask={addTask} />\n      <TaskSummary tasks={tasks} />\n      <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\n      {selectedTask && (\n        <TaskModal\n          task={selectedTask}\n          completeTask={completeTask}\n          postponeTask={postponeTask}\n          onClose={handleCloseModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}